# ===========================================
# Secret para MCP Server AI
# IMPORTANTE: Este archivo contiene valores de ejemplo
# En producción, usar herramientas como Sealed Secrets, 
# HashiCorp Vault, o AWS Secrets Manager
# ===========================================
apiVersion: v1
kind: Secret
metadata:
  name: mcp-server-secrets
  namespace: mcp-server
  labels:
    app: mcp-server-ai
    component: secrets
    version: v1
  annotations:
    description: "Credenciales y datos sensibles para MCP Server"
    "kubernetes.io/description": "Contiene credenciales de AWS, Azure, Redis y PostgreSQL"
type: Opaque
data:
  # ===========================================
  # Credenciales de AWS
  # Valores codificados en base64
  # Comando para codificar: echo -n "valor" | base64
  # ===========================================
  AWS_ACCESS_KEY_ID: "UkVFTVBMQVpBUl9DT05fVFVfQUNDRVNTX0tFWQ=="  # REEMPLAZAR_CON_TU_ACCESS_KEY
  AWS_SECRET_ACCESS_KEY: "UkVFTVBMQVpBUl9DT05fVFVfU0VDUkVUX0tFWQ=="  # REEMPLAZAR_CON_TU_SECRET_KEY
  
  # ===========================================
  # Credenciales de Azure
  # ===========================================
  AZURE_API_KEY: "UkVFTVBMQVpBUl9DT05fVFVfQVpVUkVfQVBJX0tFWQ=="  # REEMPLAZAR_CON_TU_AZURE_API_KEY
  AZURE_RESOURCE_NAME: "UkVFTVBMQVpBUl9DT05fVFVfUkVTT1VSQ0VfTkFNRQ=="  # REEMPLAZAR_CON_TU_RESOURCE_NAME
  AZURE_ENDPOINT: "aHR0cHM6Ly9yZWVtcGxhemFyLmF6dXJlLmNvbS8="  # https://reemplazar.azure.com/
  AZURE_API_VERSION: "MjAyNS0wMS0wMS1wcmV2aWV3"  # 2025-01-01-preview
  
  # ===========================================
  # Credenciales de Redis
  # ===========================================
  REDIS_PASSWORD: "UkVFTVBMQVpBUl9DT05fVFVfUkVESVNfUEFTU1dPUkQ="  # REEMPLAZAR_CON_TU_REDIS_PASSWORD
  REDIS_URL: "cmVkaXM6Ly86UEFTU1dPUkRAcmVkaXMtc2VydmljZTo2Mzc5LzA="  # redis://:PASSWORD@redis-service:6379/0
  
  # ===========================================
  # Credenciales de PostgreSQL
  # ===========================================
  POSTGRES_USER: "bWNwX3VzZXI="  # mcp_user
  POSTGRES_PASSWORD: "UkVFTVBMQVpBUl9DT05fVFVfUE9TVEdSRVNfUEFTU1dPUkQ="  # REEMPLAZAR_CON_TU_POSTGRES_PASSWORD
  POSTGRES_URL: "cG9zdGdyZXNxbDovL3VzZXI6cGFzc0Bwb3N0Z3Jlcy1zZXJ2aWNlOjU0MzIvbWNwX3NlcnZlcj9zc2xtb2RlPXJlcXVpcmU="
  
  # ===========================================
  # Tokens de autenticación
  # ===========================================
  API_KEY: "UkVFTVBMQVpBUl9DT05fVFVfQVBJX0tFWQ=="  # REEMPLAZAR_CON_TU_API_KEY
  JWT_SECRET: "UkVFTVBMQVpBUl9DT05fVFVfSldUX1NFQ1JFVA=="  # REEMPLAZAR_CON_TU_JWT_SECRET
  
  # ===========================================
  # Certificados SSL/TLS (si se usan)
  # ===========================================
  TLS_CERT: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t"
  TLS_KEY: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t"

---
# ===========================================
# Secret para credenciales de Grafana
# ===========================================
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secrets
  namespace: mcp-server
  labels:
    app: grafana
    component: monitoring
type: Opaque
data:
  admin-user: "YWRtaW4="  # admin
  admin-password: "UkVFTVBMQVpBUl9DT05fVFVfR1JBRkFOQV9QQVNTV09SRA=="  # REEMPLAZAR_CON_TU_GRAFANA_PASSWORD

---
# ===========================================
# Secret para Pull de Imágenes de Docker Registry Privado
# ===========================================
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: mcp-server
  labels:
    app: mcp-server-ai
    component: registry
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {
      "auths": {
        "https://index.docker.io/v1/": {
          "username": "tu-usuario-docker",
          "password": "tu-password-docker",
          "email": "tu-email@ejemplo.com",
          "auth": "dHUtdXN1YXJpby1kb2NrZXI6dHUtcGFzc3dvcmQtZG9ja2Vy"
        }
      }
    }

---
# ===========================================
# Script para generar secrets en producción
# Guardar como: generate-secrets.sh
# ===========================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-generator-script
  namespace: mcp-server
  labels:
    app: mcp-server-ai
    component: utilities
data:
  generate-secrets.sh: |
    #!/bin/bash
    # ===========================================
    # Script para generar secrets de Kubernetes
    # Uso: ./generate-secrets.sh
    # ===========================================
    
    echo "==================================="
    echo "Generador de Secrets para MCP Server"
    echo "==================================="
    
    # Función para codificar en base64
    encode_base64() {
      echo -n "$1" | base64 | tr -d '\n'
    }
    
    # Solicitar credenciales de AWS
    read -p "Ingrese AWS Access Key ID: " aws_access_key
    read -s -p "Ingrese AWS Secret Access Key: " aws_secret_key
    echo
    
    # Solicitar credenciales de Azure
    read -p "Ingrese Azure API Key: " azure_api_key
    read -p "Ingrese Azure Resource Name: " azure_resource_name
    read -p "Ingrese Azure Endpoint: " azure_endpoint
    
    # Solicitar credenciales de Redis
    read -s -p "Ingrese Redis Password: " redis_password
    echo
    
    # Solicitar credenciales de PostgreSQL
    read -p "Ingrese PostgreSQL User: " postgres_user
    read -s -p "Ingrese PostgreSQL Password: " postgres_password
    echo
    
    # Generar el archivo de secrets
    cat > mcp-server-secrets-prod.yaml <<EOF
    apiVersion: v1
    kind: Secret
    metadata:
      name: mcp-server-secrets
      namespace: mcp-server
    type: Opaque
    data:
      AWS_ACCESS_KEY_ID: $(encode_base64 "$aws_access_key")
      AWS_SECRET_ACCESS_KEY: $(encode_base64 "$aws_secret_key")
      AZURE_API_KEY: $(encode_base64 "$azure_api_key")
      AZURE_RESOURCE_NAME: $(encode_base64 "$azure_resource_name")
      AZURE_ENDPOINT: $(encode_base64 "$azure_endpoint")
      REDIS_PASSWORD: $(encode_base64 "$redis_password")
      POSTGRES_USER: $(encode_base64 "$postgres_user")
      POSTGRES_PASSWORD: $(encode_base64 "$postgres_password")
    EOF
    
    echo "==================================="
    echo "Secret generado: mcp-server-secrets-prod.yaml"
    echo "Aplicar con: kubectl apply -f mcp-server-secrets-prod.yaml"
    echo "==================================="